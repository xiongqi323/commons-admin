<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.commons.admin.dao.SystemUserMapper">
  <resultMap id="BaseResultMap" type="com.github.commons.admin.domain.SystemUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_status" jdbcType="TINYINT" property="userStatus" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_system_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.github.commons.admin.domain.SystemUser">
    insert into t_system_user (id, user_name, password, 
      user_status, nick_name, gender, 
      age, mobile, email, 
      created, modified)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userStatus,jdbcType=TINYINT}, #{nickName,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{age,jdbcType=TINYINT}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.github.commons.admin.domain.SystemUser">
    update t_system_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      age = #{age,jdbcType=TINYINT},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_name, password, user_status, nick_name, gender, age, mobile, email, 
    created, modified
    from t_system_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_name, password, user_status, nick_name, gender, age, mobile, email, 
    created, modified
    from t_system_user
  </select>
</mapper>